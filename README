Wildlife Mapping Project

The goal of the work in this directory is to create a backend that can be used by the team to process, save, and load data to their VR map.
Using Node.js (Express) and mySQL the backend was created.

app.js is the file run using "node app.js" to start a node server listening for HTTP requests. Currently it is hosted locally on 3000 port. 

config.js is the file storing the mySQL credentials and is accessed by functions.js. since config.js contains data such as passwords its not public and is ignored by git. created config.js in the same directory as follows...
-------------------------------------
const config = {
    db: {
        host: "...",
        user: "...",
        password: "...",
        database:"wildlife"
    }
  };
module.exports = config;
-------------------------------------

functions.js stores all the middleware which queries data from mySQL and returns the data after some processing

index.html is the main webpage used as the front-end homepage to view queried data

view.ejs and submission.html are the webpages used to view the queried and submit data
view.html is retired and kept just in case

submission.html is very primative and so only have the ability to submit/save data hardcoded into the app.js routes

animal.js contains routes that allow GET, POST, DELETE of limited number of animal data through HTTP calls ONLY 


SHORT TERM GOALS:
DONE -X- app.js should only be the node server listening for HTTP requests and should not house all of the routes. Routes should be moved to a different file/folder however when moved to a sub-directory there are issues in accessing them that needs to be solved.

DONE -X- the routes should be split. a set of routes using "/view" and another "/animals" where "/view" would load the proper ejs file with queried data while "/animals" routes would return the data only. with a "/animals" route HTTP requests can be made through Unity which would return the queried data. 

DONE -X- routes should be renamed to what data is accessed rather than what action is taken --> standard in differntiating viewting data in HTML vs only getting JSON 

the mySQL database/schema needs to be revamped interms of adding more information such as animal-species 

DONE -X-other formalities such as primary/foreign key pairing


LONG TERM GOALS:
planning of how inputted data should be handled/moderated

creation of proper front-end website with css and js (react?)


